#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT

&mt { flavor = "tap-preferred"; };

/ {
    behaviors {
        td_shift_caps: td_shift_caps {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_SHIFT_CAPS";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        scroll_hue: scroll_hue {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_HUI>, <&rgb_ug RGB_HUD>;

            tap-ms = <30>;
            label = "SCROLL_HUE";
        };

        scroll_screen_brightness: scroll_screen_brightness {
            compatible = "zmk,behavior-sensor-rotate";
            label = "SCROLL_SCREEN_BRIGHTNESS";
            #sensor-binding-cells = <0>;
            bindings = <&kp C_BRIGHTNESS_INC>, <&kp C_BRIGHTNESS_DEC>;
        };

        td_sticky_shift_enter: td_sticky_shift_enter {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_STICKY_SHIFT_ENTER";
            #binding-cells = <0>;
            bindings = <&quick_release_sk RIGHT_SHIFT>, <&kp RET>;

            tapping-term-ms = <400>;
        };

        quick_release_sk: quick_release_sk {
            compatible = "zmk,behavior-sticky-key";
            label = "QUICK_RELEASE_SK";
            bindings = <&kp>;
            #binding-cells = <1>;
            quick-release;
            release-after-ms = <1000>;
        };

        tdd_shift_enter: tdd_shift_enter {
            compatible = "zmk,behavior-tap-dance";
            label = "TDD_SHIFT_ENTER";
            #binding-cells = <0>;
            bindings = <&kp RIGHT_SHIFT>, <&kp RET>, <&kp RS(RET)>;

            tapping-term-ms = <500>;
        };

        mm_bspc_del: mm_bspc_del {
            compatible = "zmk,behavior-mod-morph";
            label = "MM_BSPC_DEL";
            bindings = <&kp BACKSPACE>, <&kp DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        td_tab_escape: td_tab_escape {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_TAB_ESCAPE";
            #binding-cells = <0>;
            bindings = <&kp TAB>, <&kp ESCAPE>;

            tapping-term-ms = <250>;
        };

        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   // 10
        };
    };

    scroll_rgb_brightness: scroll_rgb_brightness {
        compatible = "zmk,behavior-sensor-rotate";
        label = "SCROLL_RGB_BRIGHTNESS";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    combos {
        compatible = "zmk,combos";

        soft_off {
            bindings = <&soft_off>;
            key-positions = <26 0 13>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "base";

            // --------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |                ↑    |  Y  |  U   |  I  |  O  |  P  | BKSP |      &kp UP_ARROW 
            // | SHIFT |  A  |  S  |  D  |  F  |  G  |               ↓    |  H  |  J   |  K  |  L  |  ;  |  '   | 
            // | CTRL |  Z  |  X  |  C  |  V  |  B  |                ←    |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |                →    | ENT | RSE  | ALT |
            //                                                      enter

            bindings = <
&td_tab_escape    &kp Q           &kp W           &kp E             &kp R         &kp T             &kp UP_ARROW     &kp Y  &kp U        &kp I              &kp O            &kp P               &mm_bspc_del
&kp LEFT_CONTROL  &mt LEFT_GUI A  &mt LEFT_ALT S  &mt LEFT_SHIFT D  &mt LCTRL F   &kp G             &kp DOWN_ARROW   &kp H  &mt RCTRL J  &mt RIGHT_SHIFT K  &mt RIGHT_ALT L  &mt RIGHT_GUI SEMI  &mt RCTRL SINGLE_QUOTE
&kp LEFT_SHIFT    &kp Z           &kp X           &kp C             &kp V         &kp B             &kp LEFT_ARROW   &kp N  &kp M        &kp COMMA          &kp DOT          &kp FSLH            &kp RIGHT_SHIFT
                                  &kp C_MUTE      &mo 1             &kp LEFT_ALT  &lt 2 LEFT_GUI    &kp RIGHT_ARROW  &sl 2  &kp SPACE    &lt 3 RET
                                                                                                    &kp ENTER
            >;

            label = "QWERTY";
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE  &none            &none            &none     &none     &none         &mmv MOVE_UP     &kp SLASH     &kp N7  &kp N8  &kp N9  &kp MINUS  &kp SLASH
&trans      &none            &mkp MB2         &mkp MB3  &mkp MB1  &none         &mmv MOVE_DOWN   &kp ASTERISK  &kp N4  &kp N5  &kp N6  &kp PLUS   &kp ASTERISK
&trans      &rgb_ug RGB_EFF  &none            &none     &none     &bt BT_NXT    &mmv MOVE_LEFT   &none         &kp N1  &kp N2  &kp N3  &kp DOT    &kp RET
                             &rgb_ug RGB_TOG  &none     &none     &none         &mmv MOVE_RIGHT  &none         &none   &kp N0
                                                                                &mkp LCLK
            >;

            label = "NUMBER";
            sensor-bindings = <&scroll_hue>;
        };

        raise_layer {
            display-name = "SYMBOL";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp GRAVE        &kp AT           &kp HASH         &kp DLLR   &kp PRCNT      &mmv MOVE_UP     &kp CARET      &kp AMPS        &kp ASTRK             &trans                 &trans         &trans
&trans  &kp EXCLAMATION  &kp LBKT         &kp RBKT         &kp EQUAL  &kp PERCENT    &mmv MOVE_DOWN   &kp AMPERSAND  &kp UNDERSCORE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PIPE       &trans
&trans  &trans           &kp LEFT_BRACE   &kp RIGHT_BRACE  &kp HASH   &trans         &mmv MOVE_LEFT   &kp CARET      &kp MINUS       &kp PLUS              &kp ASTERISK           &kp BACKSLASH  &trans
                         &rgb_ug RGB_TOG  &trans           &trans     &trans         &mmv MOVE_RIGHT  &trans         &trans          &trans
                                                                                     &mkp LCLK
            >;

            label = "SYMBOL";
            sensor-bindings = <&scroll_rgb_brightness>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&bt BT_CLR  &kp F1   &kp F2       &kp F3  &kp F4  &kp F5          &rgb_ug RGB_BRI  &none            &none             &none       &none  &kp PRINTSCREEN  &none
&trans      &kp F6   &kp F7       &kp F8  &kp F9  &kp F10         &rgb_ug RGB_BRD  &none            &none             &none       &none  &kp HOME         &kp PAGE_UP
&caps_word  &kp F11  &kp F12      &none   &none   &out OUT_TOG    &rgb_ug RGB_HUD  &rgb_ug RGB_SPI  &rgb_ug RGB_SPD   &none       &none  &kp END          &kp PAGE_DOWN
                     &bootloader  &none   &none   &none           &rgb_ug RGB_HUI  &kp C_PREV       &kp C_PLAY_PAUSE  &kp C_NEXT
                                                                  &bootloader
            >;

            label = "FN";
            sensor-bindings = <&scroll_screen_brightness>;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
