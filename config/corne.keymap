#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT

/ {
    behaviors {
        td_shift_caps: td_shift_caps {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_SHIFT_CAPS";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        scroll_hue: scroll_hue {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_HUI>, <&rgb_ug RGB_HUD>;

            tap-ms = <30>;
            label = "SCROLL_HUE";
        };

        scroll_screen_brightness: scroll_screen_brightness {
            compatible = "zmk,behavior-sensor-rotate";
            label = "SCROLL_SCREEN_BRIGHTNESS";
            #sensor-binding-cells = <0>;
            bindings = <&kp C_BRIGHTNESS_INC>, <&kp C_BRIGHTNESS_DEC>;
        };

        td_sticky_shift_enter: td_sticky_shift_enter {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_STICKY_SHIFT_ENTER";
            #binding-cells = <0>;
            bindings = <&quick_release_sk RIGHT_SHIFT>, <&kp RET>;

            tapping-term-ms = <400>;
        };

        quick_release_sk: quick_release_sk {
            compatible = "zmk,behavior-sticky-key";
            label = "QUICK_RELEASE_SK";
            bindings = <&kp>;
            #binding-cells = <1>;
            quick-release;
            release-after-ms = <1000>;
        };

        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   // 10
        };
    };

    scroll_rgb_brightness: scroll_rgb_brightness {
        compatible = "zmk,behavior-sensor-rotate";
        label = "SCROLL_RGB_BRIGHTNESS";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    combos {
        compatible = "zmk,combos";

        soft_off {
            bindings = <&soft_off>;
            key-positions = <26 0 13>;
            layers = <0>;
        };

        delete {
            bindings = <&kp DELETE>;
            key-positions = <38 12>;
            layers = <0>;
        };

        caps_lock {
            bindings = <&caps_word>;
            key-positions = <26 13>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "base";

            // --------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |                ↑    |  Y  |  U   |  I  |  O  |  P  | BKSP |      &kp UP_ARROW 
            // | SHIFT |  A  |  S  |  D  |  F  |  G  |               ↓    |  H  |  J   |  K  |  L  |  ;  |  '   | 
            // | CTRL |  Z  |  X  |  C  |  V  |  B  |                ←    |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |                →    | ENT | RSE  | ALT |
            //                                                      enter

            bindings = <
&mt ESCAPE TAB    &kp Q  &kp W       &kp E           &kp R         &kp T    &kp UP_ARROW     &kp Y  &kp U      &kp I      &kp O    &kp P     &kp BSPC
&kp LEFT_CONTROL  &kp A  &kp S       &kp D           &kp F         &kp G    &kp DOWN_ARROW   &kp H  &kp J      &kp K      &kp L    &kp SEMI  &kp SINGLE_QUOTE
&kp LEFT_SHIFT    &kp Z  &kp X       &kp C           &kp V         &kp B    &kp LEFT_ARROW   &kp N  &kp M      &kp COMMA  &kp DOT  &kp FSLH  &td_sticky_shift_enter
                         &kp C_MUTE  &lt 2 LEFT_GUI  &kp LEFT_ALT  &mo 1    &kp RIGHT_ARROW  &sl 2  &kp SPACE  &sl 3
                                                                            &kp ENTER
            >;

            label = "QWERTY";
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans           &kp N1  &kp N2           &kp N3    &kp N4    &kp N5    &mmv MOVE_UP     &kp N6  &kp N7  &kp N8  &kp N9  &kp SLASH     &kp MINUS
&bt BT_NXT       &trans  &mkp MB2         &mkp MB3  &mkp MB1  &trans    &mmv MOVE_DOWN   &trans  &kp N4  &kp N5  &kp N6  &kp ASTERISK  &kp PLUS
&rgb_ug RGB_EFF  &trans  &trans           &trans    &trans    &trans    &mmv MOVE_LEFT   &trans  &kp N1  &kp N2  &kp N3  &kp DOT       &kp RET
                         &rgb_ug RGB_TOG  &trans    &trans    &trans    &mmv MOVE_RIGHT  &trans  &trans  &kp N0
                                                                        &mkp LCLK
            >;

            label = "NUMBER";
            sensor-bindings = <&scroll_hue>;
        };

        raise_layer {
            display-name = "SYMBOL";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TILDE  &kp EXCL  &kp AT           &kp HASH  &kp DLLR  &kp PRCNT    &mmv MOVE_UP     &kp CARET  &kp AMPS        &kp ASTRK  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PIPE
&kp GRAVE  &trans    &trans           &trans    &trans    &trans       &mmv MOVE_DOWN   &trans     &kp UNDERSCORE  &kp EQUAL  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSLASH
&trans     &trans    &trans           &none     &none     &trans       &mmv MOVE_LEFT   &trans     &kp MINUS       &kp PLUS   &kp LBKT              &kp RBKT               &kp FSLH
                     &rgb_ug RGB_TOG  &trans    &trans    &trans       &mmv MOVE_RIGHT  &trans     &trans          &trans
                                                                       &mkp LCLK
            >;

            label = "SYMBOL";
            sensor-bindings = <&scroll_rgb_brightness>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&bt BT_CLR  &kp F1   &kp F2                 &kp F3  &kp F4  &kp F5          &rgb_ug RGB_BRI  &trans           &trans            &trans      &trans  &kp PRINTSCREEN  &trans
&trans      &kp F6   &kp F7                 &kp F8  &kp F9  &kp F10         &rgb_ug RGB_BRD  &trans           &trans            &trans      &trans  &kp HOME         &kp PAGE_UP
&caps_word  &kp F11  &kp F12                &trans  &trans  &out OUT_TOG    &rgb_ug RGB_HUD  &rgb_ug RGB_SPI  &rgb_ug RGB_SPD   &trans      &trans  &kp END          &kp PAGE_DOWN
                     &kp C_BRIGHTNESS_AUTO  &trans  &trans  &trans          &rgb_ug RGB_HUI  &kp C_PREVIOUS   &kp C_PLAY_PAUSE  &kp C_NEXT
                                                                            &rgb_ug RGB_TOG
            >;

            label = "FN";
            sensor-bindings = <&scroll_screen_brightness>;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
